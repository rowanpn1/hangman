const express = require("express");
const path = require("path");
const bodyParser = require("body-parser");
const mongoose = require("mongoose");
const { generateRandomWord, createGame } = require("./game");

const app = express();
const PORT = process.env.PORT || 3000;

// setup view engine
app.set("view engine", "ejs");
app.set("views", path.join(__dirname, "views"));

// setup middleware
app.use(bodyParser.urlencoded({ extended: false }));

// connect to MongoDB
mongoose.connect("mongodb://localhost/hangman", {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const db = mongoose.connection;

// handle MongoDB errors
db.on("error", console.error.bind(console, "connection error:"));
db.once("open", () => {
  console.log("Connected to MongoDB.");
});

// handle GET requests to the homepage
app.get("/", (req, res) => {
  res.render("index");
});

// handle GET requests to the play page
app.get("/play", async (req, res) => {
  const word = await generateRandomWord();
  const game = createGame(word);
  res.render("play", { game });
});

// handle POST requests to the play page
app.post("/play", (req, res) => {
  const guess = req.body.guess;
  const game = req.body.game;
  game.makeGuess(guess);
  res.render("play", { game });
});

// handle GET requests to the submit word page
app.get("/submit-word", (req, res) => {
  res.render("submit-word");
});

// handle POST requests to the submit word page
app.post("/submit-word", (req, res) => {
  const word = req.body.word;
  db.collection("words").insertOne({ word }, (err, result) => {
    if (err) {
      console.log(err);
      res.redirect("/submit-word");
    } else {
      console.log("Word added to database.");
      res.redirect("/");
    }
  });
});

// start the server
app.listen(PORT, () => {
  console.log(`Server started on port ${PORT}.`);
});
